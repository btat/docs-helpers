# https://docs.asciidoctor.org/asciidoc/latest/sections/auto-ids/
# Convert internal links use correct xref format for autogenerated IDs

# Link macro to xref macro to enable validation

files_with_link = %x[ grep -rlE --include \\*.adoc "link:\.{1,2}/[^\[]*" ]

files_with_link.split.uniq.each do |file|
  internal_links_in_file = %x[ grep -oE "link:\.{1,2}/[^\[]*" #{file} ]
  internal_links_in_file.split.uniq.each do |link|
    new_link = link.sub("link:./","xref:./").sub("link:../","xref:../")
    %x[ sed -i "s|#{link}|#{new_link}|g" #{file} ]
  end
end

# Angled brackets 
# E.g. <<some-section-header, Some Section Header>> becomes <<_some_secton_header, Some Section Header>>

files_with_link = %x[ grep -rl --include \\*.adoc "<<" ]

files_with_link.split.uniq.each do |file|
  internal_links_in_file = %x[ grep -oE "<<([^,-]*-*)*" #{file} ].chomp
  internal_links_in_file.split.uniq.each do |link|
    new_link = link.downcase.gsub('-','_')
    if !new_link.start_with?("<<_")
      new_link = new_link.sub('<<','<<_')
    end
    %x[ sed -i "s|#{link}|#{new_link}|g" #{file} ]
  end
end

# xref macro but section ID (fragment/hash) contains hyphens or missing initial underscore
# E.g. xref:page.adoc#header becomes xref:page.adoc#_header
# E.g. xref:page.adoc#_some-section-header becomes xref:page.adoc#_some_section_header

files_with_link = %x[ grep -rlE --include \\*.adoc "xref:[^\[]*" ].chomp

files_with_link.split.uniq.each do |file|
  internal_links_in_file = %x[ grep -oE "xref:[^\[]*" #{file} ].chomp
  internal_links_in_file.split.uniq.each do |link|
    if !link.include?("#")
      next
    end

    header = link[/#.*/]
    new_header = header.gsub("-","_")
    
    if !new_header.start_with?("#_")
      new_header.sub!("#","#_")
    end

    new_link = link.sub(header, new_header)
    new_link.gsub!(/_+/,"_")
    
    %x[ sed -i "s|#{link}|#{new_link}|g" #{file} ]
  end
end
